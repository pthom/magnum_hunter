language:
  - cpp

sudo:
  - true

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - python3-pip
      - g++-7

git:
    submodules: false

before_install:
  # Disable autoupdate
  - export HOMEBREW_NO_AUTO_UPDATE=1

  # Install Python 3
  - if [[ "`uname`" == "Darwin" ]]; then travis_retry brew upgrade python || echo "Ignoring failure..."; fi
  - if [[ "`uname`" == "Darwin" ]]; then travis_retry brew install python3; fi

  # Info about python
  - python3 --version
  - pip3 --version

  # Install click
  - pip3 install --user click

  # Install Python package 'requests'
  # 'easy_install3' is not installed by 'brew install python3' on OS X 10.9 Maverick
  - if [[ "`uname`" == "Darwin" ]]; then pip3 install requests; fi
  - if [[ "`uname`" == "Darwin" ]]; then pip3 install gitpython; fi
  - if [[ "`uname`" == "Linux" ]]; then travis_retry pip3 install --user requests; fi
  - if [[ "`uname`" == "Linux" ]]; then travis_retry pip3 install --user gitpython; fi



dist:
  - trusty

matrix:
  include:
    # Linux {

    - os: linux
      env: >
        TOOLCHAIN=clang-cxx17

    - os: linux
      env: >
        TOOLCHAIN=gcc-7-cxx17

    # - os: linux
    #   env: >
    #     TOOLCHAIN=android-ndk-r17-api-24-arm64-v8a-clang-libcxx14
    #     CROSS_COMPILE=1

    # - os: linux
    #   env: >
    #     TOOLCHAIN=analyze-cxx17
    #     VERBOSE=0

    - os: linux
      env: >
        TOOLCHAIN=sanitize-address-cxx17
      sudo: true

    - os: linux
      env: >
        TOOLCHAIN=sanitize-leak-cxx17
      sudo: true

    - os: linux
      env: >
        TOOLCHAIN=sanitize-thread-cxx17
      sudo: true

    # }

    # OSX {

    - os: osx
      osx_image: xcode9.4
      env: >
        TOOLCHAIN=osx-10-13-make-cxx14

    - os: osx
      osx_image: xcode9.4
      env: >
        TOOLCHAIN=osx-10-13-cxx14
        VERBOSE=0

    # - os: osx
    #   osx_image: xcode9.4
    #   env: >
    #     TOOLCHAIN=ios-nocodesign-11-4-dep-9-3
    #     CROSS_COMPILE=1

    # }

install:
  # Info about OS
  - uname -a

  # Info about available disk space
  - df -h $HOME

  # Install latest Polly toolchains and scripts
  - wget --quiet https://github.com/ruslo/polly/archive/master.zip
  - unzip -q master.zip
  - POLLY_ROOT="`pwd`/polly-master"
  - export PATH="${POLLY_ROOT}/bin:${PATH}"

  # Install dependencies (CMake, Android NDK)
  - install-ci-dependencies.py --prune-archives

  # Install dependencies (CMake, Android NDK)
  - install-ci-dependencies.py --prune-archives

  # Installed if toolchain is Android (otherwise directory doesn't exist)
  - export ANDROID_NDK_r10e="`pwd`/_ci/android-ndk-r10e"
  - export ANDROID_NDK_r11c="`pwd`/_ci/android-ndk-r11c"
  - export ANDROID_NDK_r15c="`pwd`/_ci/android-ndk-r15c"
  - export ANDROID_NDK_r16b="`pwd`/_ci/android-ndk-r16b"
  - export ANDROID_NDK_r17="`pwd`/_ci/android-ndk-r17"

script:
  - | # build corrade-rc if cross compiling
    if [ ! -z ${CROSS_COMPILE+x} ]; then
      ./magnum-build-corrade-rc.sh
      export PATH=$PATH:~/corrade-rc-bin
    fi
  # replace symlinks by real checkouts in magnum_example_app_with_submodules/third_party
  - TOPDIR=$(pwd)
  - rm magnum_example_app_with_submodules/third_party/corrade
  - mv corrade magnum_example_app_with_submodules/third_party/corrade
  - cd magnum_example_app_with_submodules/third_party/corrade
  - git reset --hard
  - git clean -fd
  - cd $(TOPDIR)
  - rm magnum_example_app_with_submodules/third_party/magnum
  - mv magnum magnum_example_app_with_submodules/third_party/magnum
  - cd magnum_example_app_with_submodules/third_party/magnum
  - git reset --hard
  - git clean -fd
  - cd $(TOPDIR)
  # build !
  - python3 ./TLDR_hunter.py test-build magnum_example_app_with_submodules $TOOLCHAIN
